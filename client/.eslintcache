[{"/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/index.js":"1","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/App.js":"2","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/reducer.js":"3","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Home.js":"4","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Search.js":"5","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Signup.js":"6","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Profile.js":"7","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Login.js":"8","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/Header/index.js":"9","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/Footer/index.js":"10","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/utils/queries.js":"11","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/utils/auth.js":"12","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/utils/mutations.js":"13","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/Requests/index.js":"14","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/Results/index.js":"15","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/HobbyList/index.js":"16","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/HobbyForm/index.js":"17","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Inbox.js":"18"},{"size":1014,"mtime":1633994334116,"results":"19","hashOfConfig":"20"},{"size":2456,"mtime":1633997233088,"results":"21","hashOfConfig":"20"},{"size":399,"mtime":1633994334141,"results":"22","hashOfConfig":"20"},{"size":839,"mtime":1633995696733,"results":"23","hashOfConfig":"20"},{"size":3028,"mtime":1633994334122,"results":"24","hashOfConfig":"20"},{"size":4018,"mtime":1633994334123,"results":"25","hashOfConfig":"20"},{"size":2398,"mtime":1633996039535,"results":"26","hashOfConfig":"20"},{"size":2625,"mtime":1633994334120,"results":"27","hashOfConfig":"20"},{"size":2041,"mtime":1633994573491,"results":"28","hashOfConfig":"20"},{"size":628,"mtime":1633994334067,"results":"29","hashOfConfig":"20"},{"size":1539,"mtime":1633994334144,"results":"30","hashOfConfig":"20"},{"size":825,"mtime":1633994334142,"results":"31","hashOfConfig":"20"},{"size":1783,"mtime":1633994334143,"results":"32","hashOfConfig":"20"},{"size":2839,"mtime":1633996599001,"results":"33","hashOfConfig":"20"},{"size":3854,"mtime":1633994334079,"results":"34","hashOfConfig":"20"},{"size":1695,"mtime":1633994334074,"results":"35","hashOfConfig":"20"},{"size":1887,"mtime":1633994551987,"results":"36","hashOfConfig":"20"},{"size":585,"mtime":1633997126787,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5jld7o",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/index.js",[],["84","85"],"/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/App.js",["86"],"import React, {useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Inbox from './pages/Inbox'\n\n//global variables start\nwindow.user = {\n  id: 0,\n  age: \"\",\n  fName: \"\",\n  fLame: \"\",\n  locCity: \"\",\n  locState: \"\",\n  hobbies: [],\n}\n//global variables end\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser');\n    if (loggedInUser) {\n      dispatch({\n        type: 'LOGIN',\n        payload: JSON.parse(loggedInUser)\n      })\n    }\n  },[])\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/me\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/inbox\">\n              <Inbox />\n            </Route>\n            <Route exact path=\"/search\">\n              <Search />\n            </Route>\n            <Route exact path=\"/profiles/:profileId\">\n              <Profile />\n            </Route>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/reducer.js",[],"/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Home.js",["87","88","89","90"],"import React, { Component } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Requests from '../components/Requests'\nimport BackgroundSlideshow from 'react-background-slideshow';\nimport {useSelector} from 'react-redux';\n\n\nimport image1 from '../components/assets/image1.jpg'\nimport image2 from '../components/assets/image2.jpg'\nimport image3 from '../components/assets/image3.jpg'\nimport image4 from '../components/assets/image4.jpg'\nimport image5 from '../components/assets/image5.jpg'\nimport image6 from '../components/assets/image6.jpg'\nimport image7 from '../components/assets/image7.jpg'\n\n\nclass Homepage extends React.Component {\n\n  \n\n  render() {\n  \n\n    return (\n\n\n\n      <div>\n    <BackgroundSlideshow images={[ image1, image2, image3, image4, image5, image6, image7 ]} />\n    </div>\n)\n}\n}\n\nexport default Homepage;\n","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Search.js",["91","92","93"],"import React, { useState, useRef } from \"react\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { QUERY_SINGLE_PROFILE } from \"../utils/queries\";\n\nimport ResultList from '../components/Results';\nimport {useSelector,useDispatch} from 'react-redux';\n\nconst Search = () => {\n  \n  const inputRef = useRef();\n  const [ queryProfile , { data }] = useLazyQuery(QUERY_SINGLE_PROFILE, {\n    variables: { profileId: inputRef.current ?  inputRef.current.value : \"\" },\n  });\n  const profile = data?.profile || [];\n  console.log(profile);\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n      <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2 text-center\">\n            Search For Friends\n          </h4>\n          <div className=\"card-body\">\n            {/* <form id='idSearch'> */}\n              <input\n                  class=\"rounded\"\n                  placeholder=\"User ID\"\n                  id=\"idSearchEl\"\n                  ref={inputRef}\n                />\n                <button\n                  className=\"btn btn-block\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => {\n                    if (inputRef.current.value.length === 0) {\n                      alert(\"invalid id input\");\n                      return;\n                    } else {\n                      queryProfile();\n                    }\n                  }}\n                >\n                  Search\n                </button>\n              {/* </form> */}\n          </div>\n        </div>\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2 text-center\">\n            Search For Friends\n          </h4>\n          <div className=\"card-body\">\n            <form>\n              <input\n                className=\"form-input\"\n                placeholder=\"First Name\"\n                name=\"fName\"\n                type=\"fName\"\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"Last Name\"\n                name=\"lName\"\n                type=\"lName\"\n              />\n\n              <input\n                className=\"form-input\"\n                placeholder=\"Location\"\n                name=\"locCity\"\n                type=\"locCity\"\n              />\n\n              <button\n                className=\"btn btn-block\"\n                style={{ cursor: \"pointer\" }}\n                type=\"submit\"\n              >\n                Search\n              </button>\n            </form>\n          </div>\n        </div>       <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2 text-center\">\n            Search Results\n          </h4>\n          <div className=\"card-body\">\n            <form>\n              <ResultList\n                  profiles={profile}\n                  title=\"These people meet your criteria:\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Search;\n","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Signup.js",["94"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_PROFILE } from '../utils/mutations';\nimport {useSelector,useDispatch} from 'react-redux';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    fName: '',\n    lName: '',\n    email: '',\n    password: '',\n    age: '',\n    locCity: '',\n    locState: '',\n  });\n  const [addProfile, { error, data }] = useMutation(ADD_PROFILE);\n  const dispatch = useDispatch();\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addProfile({\n        variables: { ...formState}, \n      });\n\n      Auth.login(data.addProfile);\n      dispatch({type: 'LOGIN', payload: data.addProfile});\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"First Name\"\n                  name=\"fName\"\n                  type=\"fName\"\n                  value={formState.fName}\n                  onChange={handleChange}\n                /><input\n                  className=\"form-input\"\n                  placeholder=\"Last Name\"\n                  name=\"lName\"\n                  type=\"lName\"\n                  value={formState.lName}\n                  onChange={handleChange}\n              /><input\n                  className=\"form-input\"\n                  placeholder=\"How old are you?\"\n                  name=\"age\"\n                  type=\"age\"\n                  value={formState.age}\n                  onChange={handleChange}>\n              </input>\n              <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"What city are you from?\"\n                  name=\"locCity\"\n                  type=\"locCity\"\n                  value={formState.locCity}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"What state are you from?\"\n                  name=\"locState\"\n                  type=\"locState\"\n                  value={formState.locState}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Profile.js",["95","96","97","98","99"],"import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport HobbiesList from '../components/HobbyList';\nimport HobbyForm from '../components/HobbyForm';\nimport HobbyList from '../components/HobbyList'\nimport { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\nimport {useSelector,useDispatch} from 'react-redux';\nimport biopic from '../components/assets/biopic.png';\n// import Auth from '../utils/auth';\nconst Profile = () => {\n  const loggedInUser = useSelector((state) => state.userLoggedIn);\n  const profileId = loggedInUser? loggedInUser.profile._id : null;\n  // If there is no `profileId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n  const { loading, data } = useQuery(\n    profileId ? QUERY_SINGLE_PROFILE : QUERY_ME,\n    {\n      variables: { profileId: profileId },\n    }\n  );\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n  const profile = data?.me || data?.profile || {};\n  // Use React Router's `<Redirect />` component to redirect to personal profile page if username is yours\n  // if (Auth.loggedIn() && Auth.getProfile().data._id === profileId) {\n  //   return <Redirect to=\"/me\" />;\n  // }\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  if (!profile?.fName) {\n    return (\n      <h4>\n        You need to be logged in to see your profile page. Use the navigation\n        links above to sign up or log in!\n      </h4>\n    );\n  }\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\" col-9 col-lg-8\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2 text-center\">\n            {profile.fName} {profile.lName}\n              <h4 className=\"bg-dark text-light p-2 text-center\">Hand Out your id: {profile._id}</h4>\n          </h4>\n          <img className=\"bio justify-content-md-center\" src={biopic} alt={biopic} />\n          <hr/>\n          <h5 className= \"bg-dark text-light p-2 text-center \" >\n          {profile.locCity},{profile.locState} Age: {profile.age}\n          </h5>\n          <hr/>\n          <h5 className= \"bg-dark text-light p-2 text-center \" >\n            My Hobbies are: {profile.hobbies}\n          </h5>\n          <HobbyForm />\n        </div>\n      </div>\n    </main>\n  );\n};\nexport default Profile;","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Login.js",["100"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport {useSelector,useDispatch} from 'react-redux';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n  const dispatch = useDispatch();\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login);\n      dispatch({type: 'LOGIN', payload: data.login})\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/Header/index.js",[],"/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/Footer/index.js",[],"/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/utils/queries.js",[],"/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/utils/auth.js",[],"/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/utils/mutations.js",[],"/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/Requests/index.js",["101","102","103","104","105"],"import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { useQuery } from '@apollo/client';\nimport { RETRIEVE_FRIEND_REQUESTS } from '../../utils/queries';\n// import { ADD_FRIEND } from '../../utils/mutations';\nimport { DECLINE_FRIEND } from '../../utils/mutations';\nimport {useSelector} from 'react-redux';\nimport { isNullableType } from 'graphql';\nimport userImg from '../assets/usrImg.png'\n\n//THIS COMPONENT NEEDS AN ARRAY OF PROFILEIDs SO that it \n//May prepare a results page of resultant profiles.\n//In turn a user can \"Add Friend\"\n//615c5daf9c448d635801ccaa\n\nconst Requests = () => {\n  const loggedInUser = useSelector((state) => state.userLoggedIn);\n  const userId = loggedInUser? loggedInUser.profile._id : null;\n\n  // const [ addFriend ] = useMutation(ADD_FRIEND, {\n  //   onError(error) {\n  //     console.log('DETAILED ADD_FRIEND errors');\n  //     console.log(JSON.stringify(error, null, 2));\n  //   },\n  // });\n\n  const [ declineFriend ] = useMutation(DECLINE_FRIEND, {\n    onCompleted() {\n      window.location.replace(\"/\");\n    },\n    onError(error) {\n      console.log('DETAILED DECLINE_FRIEND errors');\n      console.log(JSON.stringify(error, null, 2));\n    },\n  });\n\n  const { loading, data } = useQuery(RETRIEVE_FRIEND_REQUESTS,\n    {\n      variables: { \n        receiver: userId,\n        response: \"requested\" },\n    }\n  );\n  \n  if (!data) {\n    return <h6><strong>Nobody wants to be your friend.</strong></h6>;\n  }\n    \n  return (\n      <div>\n        {data.retrieveFriendRequests.map((request) => (\n          <div class=\"ui cards\">\n              <div class=\"card\">\n                  <div class=\"content\">\n                      <img class=\"right floated mini ui image\" src={userImg}/>\n                      <div class=\"header\">\n                          <strong>{request.sender_fName} {request.sender_lName}</strong>\n                      </div>\n                      <div class=\"description\">\n                      {request.sender_fName} wants to friend you\n                      </div>\n                  </div>\n                  <div class=\"extra content\">\n                      <div class=\"resultsBtn\">\n                        <button class=\"btn btnApprove\" >Approve</button>\n                        {/* <button class=\"btn btnApprove\" onClick={() => { \n                              addFriend({ variables:  { _id: request._id } }); declineFriend({ variables:  { _id: request._id } });}} >Approve</button> */}\n                        <button class=\"btn btnDecline\" onClick={() => { \n                              declineFriend({ variables:  { _id: request._id } }); }} >Decline</button>\n                      </div>\n                  </div>\n              </div>\n          </div>\n        ))}\n      </div>\n  );\n};\n\nexport default Requests;\n","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/Results/index.js",[],"/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/HobbyList/index.js",["106"],"import React from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { REMOVE_HOBBY } from '../../utils/mutations';\nimport { QUERY_ME } from '../../utils/queries';\n\nconst HobbiesList = ({ hobbies, isLoggedInUser }) => {\n  const [removeHobby, { error }] = useMutation(REMOVE_HOBBY, {\n    update(cache, { data: { removeHobby } }) {\n      try {\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: { me: removeHobby },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleRemoveHobby = async (hobby) => {\n    try {\n      const { data } = await removeHobby({\n        variables: { hobby },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (!hobbies.length) {\n    return <h3>No Hobbies Yet</h3>;\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-space-between my-4\">\n        {hobbies &&\n          hobbies.map((hobby) => (\n            <div key={hobby} className=\"col-12 col-xl-6\">\n              <div className=\"card mb-3\">\n                <h4 className=\"card-header bg-dark text-light p-2 m-0 display-flex align-center\">\n                  <span>{hobby}</span>\n                  {isLoggedInUser && (\n                    <button\n                      className=\"btn btn-sm btn-danger ml-auto\"\n                      onClick={() => handleRemoveHobby (hobby)}\n                    >\n                      X\n                    </button>\n                  )}\n                </h4>\n              </div>\n            </div>\n          ))}\n      </div>\n      {error && (\n        <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n      )}\n    </div>\n  );\n};\n\nexport default HobbiesList;\n","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/components/HobbyForm/index.js",["107"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport {useSelector} from 'react-redux'\nimport { ADD_HOBBY } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst HobbyForm = () => {\n  const [hobby, setHobby] = useState('');\n  const loggedInUser = useSelector((state) => state.userLoggedIn);\n  const profileId = loggedInUser? loggedInUser.profile._id : null;\n  const [addHobby, { error }] = useMutation(ADD_HOBBY);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const data = await addHobby({\n        variables: { profileId, hobby },\n      });\n      console.log(profileId)\n      setHobby('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Add a New Hobby</h4>\n\n      {Auth.loggedIn() ? (\n        <form\n          className=\"flex-row justify-center justify-space-between-md align-center\"\n          onSubmit={handleFormSubmit}\n        >\n          <div className=\"col-12 col-lg-9\">\n            <input\n              placeholder=\"What are your hobbies...\"\n              value={hobby}\n              className=\"form-input w-100\"\n              onChange={(event) => setHobby(event.target.value)}\n            />\n          </div>\n\n          <div className=\"col-12 col-lg-3\">\n            <button className=\"btn btn-info btn-block py-3\" type=\"submit\">\n              Add\n            </button>\n          </div>\n          {error && (\n            <div className=\"col-12 my-3 bg-danger text-white p-3\">\n              {error.message}\n            </div>\n          )}\n        </form>\n      ) : (\n        <p>\n          You need to be logged in to endorse hobbies. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default HobbyForm;\n","/Users/daltonrothrock/Desktop/Projects-Folder/Friendr/teamproject3/client/src/pages/Inbox.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":64,"column":5,"nodeType":"114","endLine":64,"endColumn":7,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"120","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":18},{"ruleId":"116","severity":1,"message":"121","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":16},{"ruleId":"116","severity":1,"message":"122","line":5,"column":9,"nodeType":"118","messageId":"119","endLine":5,"endColumn":20},{"ruleId":"116","severity":1,"message":"123","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"122","line":6,"column":9,"nodeType":"118","messageId":"119","endLine":6,"endColumn":20},{"ruleId":"116","severity":1,"message":"124","line":6,"column":21,"nodeType":"118","messageId":"119","endLine":6,"endColumn":32},{"ruleId":"116","severity":1,"message":"122","line":6,"column":9,"nodeType":"118","messageId":"119","endLine":6,"endColumn":20},{"ruleId":"116","severity":1,"message":"125","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":18},{"ruleId":"116","severity":1,"message":"126","line":2,"column":20,"nodeType":"118","messageId":"119","endLine":2,"endColumn":29},{"ruleId":"116","severity":1,"message":"127","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":19},{"ruleId":"116","severity":1,"message":"128","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":17},{"ruleId":"116","severity":1,"message":"124","line":8,"column":21,"nodeType":"118","messageId":"119","endLine":8,"endColumn":32},{"ruleId":"116","severity":1,"message":"122","line":5,"column":9,"nodeType":"118","messageId":"119","endLine":5,"endColumn":20},{"ruleId":"116","severity":1,"message":"123","line":1,"column":16,"nodeType":"118","messageId":"119","endLine":1,"endColumn":24},{"ruleId":"116","severity":1,"message":"129","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":14},{"ruleId":"116","severity":1,"message":"130","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":24},{"ruleId":"116","severity":1,"message":"131","line":39,"column":11,"nodeType":"118","messageId":"119","endLine":39,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":57,"column":23,"nodeType":"134","endLine":57,"endColumn":79},{"ruleId":"116","severity":1,"message":"135","line":23,"column":15,"nodeType":"118","messageId":"119","endLine":23,"endColumn":19},{"ruleId":"116","severity":1,"message":"135","line":19,"column":13,"nodeType":"118","messageId":"119","endLine":19,"endColumn":17},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["138"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'Requests' is defined but never used.","'useSelector' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'Redirect' is defined but never used.","'useParams' is defined but never used.","'HobbiesList' is defined but never used.","'HobbyList' is defined but never used.","'Link' is defined but never used.","'isNullableType' is defined but never used.","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [dispatch]",{"range":"141","text":"142"},[1535,1537],"[dispatch]"]